@import "fonts.scss";
@import "common.scss";

$color-text: #000;
$color-link: #000;
$color-link-hover: lighten($color-link, 60%);
$color-link-visited: lighten($color-link, 40%);
$color-background: #fff;
$color-selection: #ffc;
$size: "((1vmin + 1vmax) / 3)";
$size-margin: "((1vmin + 1vmax) / 3) * 2";

@mixin logo($size: 4vmin) {
  $ratio: 1.6;
  &,
  &:active,
  &:visited {
    background: $color-link;
    //letter-spacing: calc((0 - (#{$size})) / 18);

    border-radius: calc((#{$size}));
    color: $color-background;
    display: inline-block;

    font-size: calc(#{$size} * 0.5);

    font-weight: 100;

    height: calc((#{$size}));

    line-height: calc((#{$size}));

    line-height: calc((#{$size}));
    text-align: center;
    text-decoration: none;
    transition:
      color 0.2s ease-out,
      background-color 0.2s ease-out;
    width: calc((#{$size}));
  }

  &:hover {
    background: $color-link-hover;
    color: $color-link;
  }
}

html {
  border: 1px solid #fff;
}

html,
body {
  @include font-family;
  color: $color-link;

  font-size: calc(#{$size} * 3.6);
  font-size: clamp(14px, 1vw, 18px); // Smaller base size, limits scaling
  line-height: 1.5; // Adjust for compactness

  @media print {
    font-size: calc(#{$size} * 1.8);
    max-width: 190mm;
  }
  margin: 0 auto;

  padding: 0;
  a {
    color: $color-link;
    text-decoration: none;
    transition: color 0.2s ease;

    &:not(.no-decoration) {
      @include smart-underline(
        $color-background,
        $color-link,
        $color-selection,
        $position: 94%
      );
      &:hover {
        color: $color-link-hover;
      }
    }

    &:visited {
      color: $color-link-visited;
    }

    &:hover {
      color: $color-link-hover;
    }
  }
}

body {
  padding: calc(#{$size-margin} / 2);

  .intro {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .left-column,
  .right-column {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  // Align content to the right in the right column
  .right-column {
    align-items: flex-end; // Aligns flex items (children) to the end (right side) of the container.
    text-align: right; // Ensures the text within aligns to the right as well.
  }

  @media (max-width: 768px) {
    .intro {
      flex-direction: column;
      align-items: flex-start; // Resets alignment for stacked layout on smaller screens
    }

    .left-column,
    .right-column {
      width: 100%;
      align-items: flex-start; // Resets alignment for the right column in a stacked layout
      text-align: left; // Resets text alignment for smaller screens
    }
  }

  a.side-note {
    text-decoration: none;
  }

  h1 {
    font-weight: 100;
  }

  h2 {
    font-weight: 300;
  }

  h3 {
    font-weight: 500;
    em {
      font-weight: 300;
    }
  }

  h4 {
    font-weight: 600;
  }

  h5 {
    font-weight: 700;
  }

  h6 {
    font-weight: 800;
  }

  ul,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  section,
  p {
    padding: 0;
    margin: 0;
  }

  nav {
    @media print {
      display: none;
    }

    .logo {
      @include logo("#{$size-margin} * 4.4");
      margin: 0;
    }

    a {
      &:not(.logo) {
        font-size: 1rem;
        text-align: right;
      }
    }

    div.right {
      text-align: right;
    }
  }

  header {
    margin-top: calc((#{$size-margin}) / 2);
  }

  footer {
    font-size: 0.6rem;
    margin-top: calc((#{$size-margin}) / 2);
    text-align: center;
  }

  div.doc-wrapper {
    border: 20px solid #fff;

    a {
      &:not(.no-decoration) {
        @include no-smart-underline();
      }
    }
  }

  ul.info,
  ul.contact,
  ul.educations,
  ul.skills,
  ul.contact {
    li {
      display: inline;
      margin: 0;
      &:not(:first-child)::before {
        content: "\00a0\2022\00a0\00a0";
      }
    }
  }

  ul.skills {
    line-height: calc(#{$size} * 3);
  }

  ul.experiences {
    li {
      margin: 0 0 0 0;
      padding: 0;
      p {
        margin: 0;
      }
    }
  }

  ul.experiences {
    // Remove display: grid; and related grid properties
    -webkit-column-count: 2; /* Chrome, Safari, Opera */
    -moz-column-count: 2; /* Firefox */
    column-count: 2; /* Standard syntax */

    -webkit-column-gap: 20px; /* Chrome, Safari, Opera */
    -moz-column-gap: 20px; /* Firefox */
    column-gap: 20px; /* Standard syntax */

    list-style-type: none;
    padding: 0;
    margin: 0;
    width: 100%;

    li.experience {
      // background: #f5f5f5;
      padding: calc(#{$size-margin} * 1.4);
      // box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); // Optional shadow for depth
      break-inside: avoid; /* Prevents breaking items across columns */
      margin-bottom: 20px; /* Spacing between items */
    }

    @media (max-width: 768px) {
      -webkit-column-count: 1; /* Chrome, Safari, Opera */
      -moz-column-count: 1; /* Firefox */
      column-count: 1; /* Single column layout on smaller screens */
    }
  }

  // Ensure global or specific styles are adjusted to complement this layout
}
